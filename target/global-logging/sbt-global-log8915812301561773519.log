[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\y2ksa\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\y2ksa\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.0 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 289.5324ms
[debug]       Load.loadUnit: defsScala took 0.6335ms
[debug] [Loading] Scanning directory C:\Users\y2ksa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\y2ksa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.5628 ms
[debug]           Load.resolveProject(global-plugins) took 79.9921ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\y2ksa\.sbt\1.0\plugins, plugins: List(<none>))) took 187.8635ms
[debug] [Loading] Done in C:\Users\y2ksa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 234.6638ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5852ms
[debug]     Load.loadUnit(file:/C:/Users/y2ksa/.sbt/1.0/plugins/, ...) took 543.5949ms
[debug]   Load.apply: load took 894.1279ms
[debug]   Load.apply: resolveProjects took 11.5643ms
[debug]   Load.apply: finalTransforms took 161.0419ms
[debug]   Load.apply: config.delegates took 22.8045ms
[debug]   Load.apply: Def.make(settings)... took 1816.1573ms
[debug]   Load.apply: structureIndex took 1153.9672ms
[debug]   Load.apply: mkStreams took 3.7675ms
[info] loading global plugins from C:\Users\y2ksa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 28333.0102ms
[debug]           Load.loadUnit: plugins took 90.7257ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\intellij-project\project
[debug]             Load.loadUnit: mkEval took 15.6101ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\intellij-project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.6559 ms
[info] loading settings for project intellij-project-build from idea.sbt ...
[debug]               Load.resolveProject(intellij-project-build) took 13.0062ms
[debug]             Load.loadTransitive: finalizeProject(Project(id intellij-project-build, base: C:\intellij-project\project, plugins: List(<none>))) took 19.8537ms
[debug] [Loading] Done in C:\intellij-project\project, returning: (intellij-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6229.7863ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.517ms
[debug]         Load.loadUnit(file:/C:/intellij-project/project/, ...) took 6332.2061ms
[debug]       Load.apply: load took 6334.7294ms
[debug]       Load.apply: resolveProjects took 0.3141ms
[debug]       Load.apply: finalTransforms took 13.512ms
[debug]       Load.apply: config.delegates took 0.6783ms
[debug]       Load.apply: Def.make(settings)... took 162.642ms
[debug]       Load.apply: structureIndex took 56.231ms
[debug]       Load.apply: mkStreams took 0.0094ms
[info] loading project definition from C:\intellij-project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8510.7048ms
[debug]     Load.loadUnit: defsScala took 0.0076ms
[debug] [Loading] Scanning directory C:\intellij-project
[debug]       Load.loadUnit: mkEval took 1.3905ms
[error] Type error in expression
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
